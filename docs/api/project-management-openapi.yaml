openapi: 3.0.3
info:
  title: VideoPlanet Project Management API
  description: |
    프로젝트 생성, 일정 관리, 템플릿 시스템을 위한 종합적인 API
    
    ## 주요 기능
    - 프로젝트 생성 및 관리 (RBAC 권한 시스템)
    - 프로젝트 일정 관리 (마일스톤, 데드라인, 리소스 할당)
    - 프로젝트 템플릿 시스템 (산업별 템플릿, 커스터마이제이션)
    - 충돌 감지 및 해결
    - 실시간 협업 및 알림
    
    ## 인증
    모든 API는 Bearer JWT 토큰 인증이 필요합니다.
    
    ## 성능 요구사항
    - 프로젝트 생성: 2초 이내
    - 일정 조회: 500ms 이내  
    - 권한 체크: 100ms 이내
    - 동시 접근: 100명 이상 지원
    
  version: 1.0.0
  contact:
    name: VideoPlanet API Team
    url: https://api.vlanet.net/docs
    email: api@vlanet.net
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT

servers:
  - url: https://api.vlanet.net
    description: Production server
  - url: https://staging-api.vlanet.net  
    description: Staging server
  - url: http://localhost:8000
    description: Development server

security:
  - bearerAuth: []

paths:
  # Project Management Endpoints
  /api/projects:
    get:
      summary: 프로젝트 목록 조회
      description: |
        사용자가 접근 권한을 가진 프로젝트 목록을 조회합니다.
        필터링, 정렬, 페이지네이션을 지원합니다.
      tags:
        - Projects
      parameters:
        - name: page
          in: query
          description: 페이지 번호 (1부터 시작)
          schema:
            type: integer
            minimum: 1
            default: 1
        - name: limit
          in: query
          description: 페이지당 항목 수
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 10
        - name: search
          in: query
          description: 프로젝트 이름/설명 검색
          schema:
            type: string
            maxLength: 100
        - name: status
          in: query
          description: 프로젝트 상태 필터 (다중 선택 가능)
          schema:
            type: array
            items:
              $ref: '#/components/schemas/ProjectStatus'
        - name: category
          in: query
          description: 프로젝트 카테고리 필터 (다중 선택 가능)
          schema:
            type: array
            items:
              $ref: '#/components/schemas/ProjectCategory'
        - name: sortBy
          in: query
          description: 정렬 기준
          schema:
            type: string
            enum: [name, createdAt, updatedAt, status]
            default: updatedAt
        - name: sortOrder
          in: query
          description: 정렬 순서
          schema:
            type: string
            enum: [asc, desc]
            default: desc
      responses:
        '200':
          description: 프로젝트 목록 조회 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectListResponse'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'

    post:
      summary: 새 프로젝트 생성
      description: |
        새 프로젝트를 생성합니다. 생성자는 자동으로 Owner 권한을 받습니다.
        프로젝트 생성 시 기본 폴더 구조(/media/projects/{project_id}/)가 자동으로 생성됩니다.
      tags:
        - Projects
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateProjectRequest'
            example:
              name: "마케팅 비디오 프로젝트"
              description: "Q1 제품 마케팅을 위한 브랜드 비디오 제작"
              category: "marketing"
              tags: ["marketing", "brand", "video"]
              settings:
                visibility: "private"
                allowComments: true
                allowDownloads: false
      responses:
        '201':
          description: 프로젝트 생성 성공
          content:
            application/json:
              schema:
                type: object
                properties:
                  project:
                    $ref: '#/components/schemas/Project'
                  folderPath:
                    type: string
                    description: 생성된 프로젝트 폴더 경로
                    example: "/media/projects/proj_1234567890_abc123"
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /api/projects/{projectId}:
    get:
      summary: 프로젝트 상세 조회
      description: |
        특정 프로젝트의 상세 정보를 조회합니다.
        권한에 따라 조회 가능한 정보가 달라집니다.
      tags:
        - Projects
      parameters:
        - name: projectId
          in: path
          required: true
          description: 프로젝트 ID
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: 프로젝트 상세 정보
          content:
            application/json:
              schema:
                type: object
                properties:
                  project:
                    $ref: '#/components/schemas/Project'
                  permissions:
                    $ref: '#/components/schemas/UserProjectPermissions'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'

    put:
      summary: 프로젝트 업데이트
      description: |
        프로젝트 정보를 업데이트합니다.
        Editor 이상의 권한이 필요합니다.
      tags:
        - Projects
      parameters:
        - name: projectId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateProjectRequest'
      responses:
        '200':
          description: 업데이트 성공
          content:
            application/json:
              schema:
                type: object
                properties:
                  project:
                    $ref: '#/components/schemas/Project'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'

    delete:
      summary: 프로젝트 삭제
      description: |
        프로젝트를 완전히 삭제합니다.
        Owner만 삭제할 수 있으며, 관련된 모든 데이터가 삭제됩니다.
      tags:
        - Projects
      parameters:
        - name: projectId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: 삭제 성공
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'

  /api/projects/{projectId}/members:
    get:
      summary: 프로젝트 멤버 목록 조회
      tags:
        - Projects
      parameters:
        - name: projectId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: 멤버 목록
          content:
            application/json:
              schema:
                type: object
                properties:
                  members:
                    type: array
                    items:
                      $ref: '#/components/schemas/ProjectMember'

    post:
      summary: 프로젝트 멤버 초대
      description: |
        새 멤버를 프로젝트에 초대합니다.
        Admin 이상의 권한이 필요합니다.
      tags:
        - Projects
      parameters:
        - name: projectId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - userId
                - role
              properties:
                userId:
                  type: string
                  format: uuid
                role:
                  $ref: '#/components/schemas/ProjectMemberRole'
                message:
                  type: string
                  description: 초대 메시지
                  maxLength: 500
      responses:
        '201':
          description: 초대 성공
          content:
            application/json:
              schema:
                type: object
                properties:
                  member:
                    $ref: '#/components/schemas/ProjectMember'

  # Schedule Management Endpoints
  /api/schedules:
    post:
      summary: 프로젝트 일정 생성
      description: |
        프로젝트의 일정을 생성합니다.
        프로젝트 Owner 또는 Admin 권한이 필요합니다.
      tags:
        - Schedules
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateScheduleRequest'
            example:
              projectId: "550e8400-e29b-41d4-a716-446655440000"
              name: "마케팅 비디오 제작 일정"
              description: "Q1 마케팅 캠페인용 비디오 제작 스케줄"
              timeline:
                startDate: "2025-01-15T09:00:00Z"
                endDate: "2025-03-15T18:00:00Z"
                bufferDays: 5
              workingDays:
                - dayOfWeek: 1
                  startTime: "09:00"
                  endTime: "18:00"
                  isWorkingDay: true
      responses:
        '201':
          description: 일정 생성 성공
          content:
            application/json:
              schema:
                type: object
                properties:
                  schedule:
                    $ref: '#/components/schemas/ProjectSchedule'

  /api/schedules/{scheduleId}:
    get:
      summary: 일정 상세 조회
      tags:
        - Schedules
      parameters:
        - name: scheduleId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: 일정 상세 정보
          content:
            application/json:
              schema:
                type: object
                properties:
                  schedule:
                    $ref: '#/components/schemas/ProjectSchedule'

    put:
      summary: 일정 업데이트
      tags:
        - Schedules
      parameters:
        - name: scheduleId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateScheduleRequest'
      responses:
        '200':
          description: 업데이트 성공
          content:
            application/json:
              schema:
                type: object
                properties:
                  schedule:
                    $ref: '#/components/schemas/ProjectSchedule'

  /api/schedules/{scheduleId}/conflicts:
    get:
      summary: 일정 충돌 감지
      description: |
        프로젝트 일정의 충돌을 감지하고 해결 방안을 제시합니다.
        - 리소스 과부하
        - 일정 겹침
        - 불가능한 데드라인
        - 순환 의존성
      tags:
        - Schedules
      parameters:
        - name: scheduleId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: 충돌 감지 결과
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictDetectionResponse'

  /api/schedules/{scheduleId}/milestones:
    post:
      summary: 마일스톤 추가
      tags:
        - Schedules
      parameters:
        - name: scheduleId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - name
                - targetDate
                - priority
              properties:
                name:
                  type: string
                  minLength: 1
                  maxLength: 100
                description:
                  type: string
                  maxLength: 500
                targetDate:
                  type: string
                  format: date-time
                priority:
                  $ref: '#/components/schemas/Priority'
                deliverables:
                  type: array
                  items:
                    type: string
                criteria:
                  type: array
                  items:
                    type: string
      responses:
        '201':
          description: 마일스톤 추가 성공

  # Template Management Endpoints  
  /api/templates:
    get:
      summary: 템플릿 목록 조회
      description: |
        사용 가능한 프로젝트 템플릿 목록을 조회합니다.
        산업별, 복잡도별, 팀 크기별 필터링을 지원합니다.
      tags:
        - Templates
      parameters:
        - name: category
          in: query
          description: 템플릿 카테고리 필터
          schema:
            type: array
            items:
              $ref: '#/components/schemas/TemplateCategory'
        - name: industry
          in: query
          description: 산업 분야 필터
          schema:
            type: array
            items:
              $ref: '#/components/schemas/IndustryType'
        - name: complexity
          in: query
          description: 복잡도 필터
          schema:
            type: array
            items:
              $ref: '#/components/schemas/ComplexityLevel'
        - name: teamSize
          in: query
          description: 팀 크기 범위
          schema:
            type: object
            properties:
              min:
                type: integer
                minimum: 1
              max:
                type: integer
                minimum: 1
        - name: rating
          in: query
          description: 최소 평점
          schema:
            type: number
            minimum: 0
            maximum: 5
      responses:
        '200':
          description: 템플릿 목록
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TemplateListResponse'

    post:
      summary: 새 템플릿 생성
      description: |
        새로운 프로젝트 템플릿을 생성합니다.
        Admin 권한이 필요합니다.
      tags:
        - Templates
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTemplateRequest'
      responses:
        '201':
          description: 템플릿 생성 성공
          content:
            application/json:
              schema:
                type: object
                properties:
                  template:
                    $ref: '#/components/schemas/ProjectTemplate'

  /api/templates/{templateId}:
    get:
      summary: 템플릿 상세 조회
      tags:
        - Templates
      parameters:
        - name: templateId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: 템플릿 상세 정보
          content:
            application/json:
              schema:
                type: object
                properties:
                  template:
                    $ref: '#/components/schemas/ProjectTemplate'

  /api/templates/{templateId}/apply:
    post:
      summary: 템플릿을 프로젝트에 적용
      description: |
        선택한 템플릿을 기반으로 새 프로젝트를 생성합니다.
        커스터마이제이션 옵션을 제공하여 팀의 요구사항에 맞게 조정할 수 있습니다.
      tags:
        - Templates
      parameters:
        - name: templateId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApplyTemplateRequest'
            example:
              projectName: "Q1 마케팅 캠페인 비디오"
              projectDescription: "신제품 런칭을 위한 마케팅 비디오 제작"
              customizations:
                startDate: "2025-02-01T09:00:00Z"
                budget: 50000
                teamMembers: 
                  - "550e8400-e29b-41d4-a716-446655440001"
                  - "550e8400-e29b-41d4-a716-446655440002"
      responses:
        '201':
          description: 템플릿 적용 성공
          content:
            application/json:
              schema:
                type: object
                properties:
                  project:
                    $ref: '#/components/schemas/Project'
                  schedule:
                    $ref: '#/components/schemas/ProjectSchedule'

  /api/templates/{templateId}/rate:
    post:
      summary: 템플릿 평가
      description: |
        사용한 템플릿에 대한 평점과 리뷰를 남깁니다.
        템플릿을 사용한 프로젝트의 멤버만 평가할 수 있습니다.
      tags:
        - Templates
      parameters:
        - name: templateId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - rating
              properties:
                rating:
                  type: integer
                  minimum: 1
                  maximum: 5
                  description: 1-5 점 평점
                review:
                  type: string
                  maxLength: 1000
                  description: 리뷰 텍스트
      responses:
        '200':
          description: 평가 등록 성공
          content:
            application/json:
              schema:
                type: object
                properties:
                  template:
                    $ref: '#/components/schemas/ProjectTemplate'

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    # Enums
    ProjectStatus:
      type: string
      enum:
        - draft
        - planning
        - in_progress
        - review
        - completed
        - cancelled
        - on_hold

    ProjectMemberRole:
      type: string
      enum:
        - owner
        - admin  
        - editor
        - reviewer
        - viewer

    ProjectCategory:
      type: string
      enum:
        - marketing
        - education
        - entertainment
        - corporate
        - documentary
        - other

    TemplateCategory:
      type: string
      enum:
        - marketing
        - education
        - entertainment
        - corporate
        - documentary
        - social_media
        - event
        - product
        - training
        - custom

    IndustryType:
      type: string
      enum:
        - media
        - technology
        - healthcare
        - finance
        - retail
        - manufacturing
        - education
        - government
        - non_profit
        - other

    ComplexityLevel:
      type: string
      enum:
        - simple
        - moderate
        - complex
        - expert

    Priority:
      type: string
      enum:
        - low
        - medium
        - high
        - critical

    # Core entities
    ProjectPermissions:
      type: object
      required:
        - canEdit
        - canDelete
        - canInviteMembers
        - canManageSettings
        - canUploadVideos
        - canViewAnalytics
      properties:
        canEdit:
          type: boolean
        canDelete:
          type: boolean
        canInviteMembers:
          type: boolean
        canManageSettings:
          type: boolean
        canUploadVideos:
          type: boolean
        canViewAnalytics:
          type: boolean

    UserProjectPermissions:
      allOf:
        - $ref: '#/components/schemas/ProjectPermissions'
        - type: object
          properties:
            role:
              $ref: '#/components/schemas/ProjectMemberRole'

    ProjectMember:
      type: object
      required:
        - userId
        - role
        - joinedAt
        - permissions
      properties:
        userId:
          type: string
          format: uuid
        role:
          $ref: '#/components/schemas/ProjectMemberRole'
        joinedAt:
          type: string
          format: date-time
        permissions:
          $ref: '#/components/schemas/ProjectPermissions'

    Project:
      type: object
      required:
        - id
        - name
        - status
        - owner
        - members
        - settings
        - metadata
        - createdAt
        - updatedAt
        - isArchived
      properties:
        id:
          type: string
          format: uuid
          description: "UUID 기반 프로젝트 식별자"
        name:
          type: string
          minLength: 1
          maxLength: 100
        description:
          type: string
          maxLength: 1000
        status:
          $ref: '#/components/schemas/ProjectStatus'
        owner:
          $ref: '#/components/schemas/ProjectMember'
        members:
          type: array
          items:
            $ref: '#/components/schemas/ProjectMember'
        settings:
          type: object
          properties:
            visibility:
              type: string
              enum: [public, private, team]
            allowComments:
              type: boolean
            allowDownloads:
              type: boolean
        metadata:
          type: object
          properties:
            tags:
              type: array
              items:
                type: string
            category:
              $ref: '#/components/schemas/ProjectCategory'
            deliverables:
              type: array
              items:
                type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        isArchived:
          type: boolean

    ProjectSchedule:
      type: object
      required:
        - id
        - projectId
        - name
        - timeline
        - milestones
        - deadlines
        - dependencies
        - resources
        - createdAt
        - updatedAt
        - status
        - version
      properties:
        id:
          type: string
          format: uuid
        projectId:
          type: string
          format: uuid
        name:
          type: string
          minLength: 1
          maxLength: 100
        description:
          type: string
          maxLength: 500
        timeline:
          type: object
          required:
            - startDate
            - endDate
            - estimatedDuration
          properties:
            startDate:
              type: string
              format: date-time
            endDate:
              type: string
              format: date-time
            estimatedDuration:
              type: integer
              minimum: 1
              description: "작업일 기준 예상 기간"
            bufferDays:
              type: integer
              minimum: 0
        milestones:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
                format: uuid
              name:
                type: string
              targetDate:
                type: string
                format: date-time
              status:
                type: string
                enum: [pending, in_progress, completed, missed, cancelled]
              priority:
                $ref: '#/components/schemas/Priority'
        deadlines:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
                format: uuid
              name:
                type: string
              dueDate:
                type: string
                format: date-time
              type:
                type: string
                enum: [soft, hard, regulatory]
              priority:
                $ref: '#/components/schemas/Priority'
        dependencies:
          type: array
          items:
            type: object
        resources:
          type: array
          items:
            type: object
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        status:
          type: string
          enum: [draft, active, on_hold, completed, cancelled]
        version:
          type: integer
          minimum: 1

    ProjectTemplate:
      type: object
      required:
        - id
        - name
        - description
        - category
        - industry
        - version
        - isPublic
        - createdBy
        - createdAt
        - updatedAt
        - usageCount
        - rating
        - tags
        - structure
        - schedule
        - resources
        - settings
        - metadata
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
          minLength: 1
          maxLength: 100
        description:
          type: string
          minLength: 10
          maxLength: 1000
        category:
          $ref: '#/components/schemas/TemplateCategory'
        industry:
          $ref: '#/components/schemas/IndustryType'
        version:
          type: string
          pattern: '^\d+\.\d+\.\d+$'
        isPublic:
          type: boolean
        createdBy:
          type: string
          format: uuid
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        usageCount:
          type: integer
          minimum: 0
        rating:
          type: object
          properties:
            average:
              type: number
              minimum: 0
              maximum: 5
            count:
              type: integer
              minimum: 0
        tags:
          type: array
          items:
            type: string
        structure:
          type: object
          description: "프로젝트 구조 정의 (페이즈, 결과물, 워크플로우 등)"
        schedule:
          type: object
          description: "일정 템플릿 (예상 기간, 마일스톤, 데드라인 등)"
        resources:
          type: array
          description: "필요한 리소스 정의"
          items:
            type: object
        settings:
          type: object
          description: "기본 프로젝트 설정"
        metadata:
          type: object
          properties:
            complexity:
              $ref: '#/components/schemas/ComplexityLevel'
            teamSize:
              type: object
              properties:
                min:
                  type: integer
                  minimum: 1
                max:
                  type: integer
                  minimum: 1
                optimal:
                  type: integer
                  minimum: 1

    ConflictDetection:
      type: object
      properties:
        id:
          type: string
          format: uuid
        type:
          type: string
          enum:
            - resource_overallocation
            - schedule_overlap
            - deadline_impossible
            - dependency_cycle
            - resource_unavailable
        description:
          type: string
        affectedItems:
          type: array
          items:
            type: string
            format: uuid
        severity:
          type: string
          enum: [low, medium, high, critical]
        suggestedResolution:
          type: string
        detectedAt:
          type: string
          format: date-time

    # Request schemas
    CreateProjectRequest:
      type: object
      required:
        - name
        - category
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 100
          description: "프로젝트 이름"
        description:
          type: string
          maxLength: 1000
          description: "프로젝트 설명"
        category:
          $ref: '#/components/schemas/ProjectCategory'
        tags:
          type: array
          items:
            type: string
          description: "프로젝트 태그"
        settings:
          type: object
          description: "프로젝트 설정"

    UpdateProjectRequest:
      type: object
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 100
        description:
          type: string
          maxLength: 1000
        status:
          $ref: '#/components/schemas/ProjectStatus'
        settings:
          type: object
        metadata:
          type: object

    CreateScheduleRequest:
      type: object
      required:
        - projectId
        - name
        - timeline
      properties:
        projectId:
          type: string
          format: uuid
        name:
          type: string
          minLength: 1
          maxLength: 100
        description:
          type: string
          maxLength: 500
        timeline:
          type: object
          required:
            - startDate
            - endDate
          properties:
            startDate:
              type: string
              format: date-time
            endDate:
              type: string
              format: date-time
            bufferDays:
              type: integer
              minimum: 0
        workingDays:
          type: array
          description: "근무일 설정"

    UpdateScheduleRequest:
      type: object
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 100
        description:
          type: string
          maxLength: 500
        timeline:
          type: object
        status:
          type: string
          enum: [draft, active, on_hold, completed, cancelled]

    CreateTemplateRequest:
      type: object
      required:
        - name
        - description
        - category
        - industry
        - structure
        - schedule
        - resources
        - settings
        - metadata
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 100
        description:
          type: string
          minLength: 10
          maxLength: 1000
        category:
          $ref: '#/components/schemas/TemplateCategory'
        industry:
          $ref: '#/components/schemas/IndustryType'
        isPublic:
          type: boolean
          default: false
        tags:
          type: array
          items:
            type: string
          default: []
        structure:
          type: object
          description: "템플릿 구조"
        schedule:
          type: object
          description: "일정 템플릿"
        resources:
          type: array
          description: "리소스 템플릿"
        settings:
          type: object
          description: "설정 템플릿"
        metadata:
          type: object
          description: "메타데이터"

    ApplyTemplateRequest:
      type: object
      required:
        - projectName
      properties:
        projectName:
          type: string
          minLength: 1
          maxLength: 100
        projectDescription:
          type: string
          maxLength: 1000
        customizations:
          type: object
          properties:
            startDate:
              type: string
              format: date-time
            budget:
              type: number
              minimum: 0
            teamMembers:
              type: array
              items:
                type: string
                format: uuid
            modifications:
              type: object
              description: "템플릿 수정사항"

    # Response schemas
    ProjectListResponse:
      type: object
      required:
        - projects
        - total
        - page
        - limit
        - hasNext
      properties:
        projects:
          type: array
          items:
            $ref: '#/components/schemas/Project'
        total:
          type: integer
          minimum: 0
        page:
          type: integer
          minimum: 1
        limit:
          type: integer
          minimum: 1
        hasNext:
          type: boolean

    TemplateListResponse:
      type: object
      properties:
        templates:
          type: array
          items:
            $ref: '#/components/schemas/ProjectTemplate'
        total:
          type: integer
          minimum: 0
        page:
          type: integer
          minimum: 1
        limit:
          type: integer
          minimum: 1
        hasNext:
          type: boolean

    ConflictDetectionResponse:
      type: object
      properties:
        conflicts:
          type: array
          items:
            $ref: '#/components/schemas/ConflictDetection'
        scheduleId:
          type: string
          format: uuid
        detectedAt:
          type: string
          format: date-time

    ErrorResponse:
      type: object
      required:
        - error
        - message
        - timestamp
        - path
      properties:
        error:
          type: string
          description: "에러 코드"
        message:
          type: string
          description: "에러 메시지"
        details:
          type: array
          items:
            type: object
            properties:
              field:
                type: string
              message:
                type: string
              value:
                type: string
        timestamp:
          type: string
          format: date-time
        path:
          type: string
          description: "API 경로"

  responses:
    BadRequest:
      description: 잘못된 요청
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
          example:
            error: "VALIDATION_ERROR"
            message: "요청 데이터가 올바르지 않습니다"
            details:
              - field: "name"
                message: "프로젝트 이름은 필수입니다"
                value: ""
            timestamp: "2025-01-15T10:30:00Z"
            path: "/api/projects"

    Unauthorized:
      description: 인증 필요
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
          example:
            error: "UNAUTHORIZED"
            message: "인증이 필요합니다"
            timestamp: "2025-01-15T10:30:00Z"
            path: "/api/projects"

    Forbidden:
      description: 권한 없음
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
          example:
            error: "FORBIDDEN"
            message: "해당 작업을 수행할 권한이 없습니다"
            timestamp: "2025-01-15T10:30:00Z"
            path: "/api/projects/123"

    NotFound:
      description: 리소스를 찾을 수 없음
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
          example:
            error: "NOT_FOUND"
            message: "요청한 프로젝트를 찾을 수 없습니다"
            timestamp: "2025-01-15T10:30:00Z"
            path: "/api/projects/123"

    InternalServerError:
      description: 서버 내부 오류
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
          example:
            error: "INTERNAL_SERVER_ERROR"
            message: "서버에서 오류가 발생했습니다"
            timestamp: "2025-01-15T10:30:00Z"
            path: "/api/projects"

tags:
  - name: Projects
    description: 프로젝트 생성, 관리, 멤버 관리
  - name: Schedules
    description: 프로젝트 일정 관리, 마일스톤, 데드라인, 충돌 감지
  - name: Templates
    description: 프로젝트 템플릿 생성, 조회, 적용