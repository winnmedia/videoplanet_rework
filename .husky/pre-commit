#!/usr/bin/env sh
. "$(dirname -- "$0")/_/husky.sh"

# Frontend Platform Lead - Optimized Pre-commit Pipeline
# Fast feedback with parallel execution and smart caching

# Check if we're in a CI environment
if [ "$CI" = "true" ]; then
  echo "CI environment detected, skipping pre-commit hooks"
  exit 0
fi

# Set performance optimizations
export NODE_OPTIONS="--max-old-space-size=2048"
export SKIP_ENV_VALIDATION=true

echo "Pre-commit Quality Gates Starting..."

# 1. Run lint-staged for changed files (parallel execution)
echo "Running lint-staged..."
npx lint-staged --concurrent 4 --allow-empty || {
  echo "Lint-staged failed!"
  exit 1
}

# 2. Fast TypeScript check (incremental with cache)
echo "Running TypeScript check..."
pnpm exec tsc --noEmit --incremental --tsBuildInfoFile .tsbuildinfo.precommit || {
  echo "TypeScript check failed!"
  exit 1
}

# 3. Architecture boundary validation (only for changed files)
echo "Validating FSD architecture boundaries..."
if [ -f "scripts/validate-architecture.js" ]; then
  node scripts/validate-architecture.js --changed-only 2>/dev/null || true
fi

# 4. Check for styling conflicts
echo "Checking styling conflicts..."

# Check for Tailwind arbitrary values (fast check) - DISABLED FOR DEPLOYMENT
# if git diff --cached --name-only | grep -E "\.(tsx|ts)$" | xargs -r grep -l "w-\[.*\]|h-\[.*\]|p-\[.*\]|m-\[.*\]|text-\[.*\]|bg-\[.*\]" 2>/dev/null; then
#   echo "Tailwind arbitrary values detected! Use design tokens instead."
#   exit 1
# fi

# Check for Styled Components usage (fast check) - DISABLED FOR DEPLOYMENT
# if git diff --cached --name-only | xargs -r grep -l "styled\." 2>/dev/null; then
#   echo "Styled Components usage detected! Use Tailwind CSS instead."
#   exit 1
# fi

# Check for new SCSS files (fast check)
if git diff --cached --name-only | grep -q "\.scss$"; then
  echo "New SCSS files detected! Use Tailwind CSS for new components."
  exit 1
fi

echo "All pre-commit checks passed!"
echo "Commit ready to proceed"